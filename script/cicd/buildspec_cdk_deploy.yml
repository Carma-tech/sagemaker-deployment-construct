version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - pwd
      - ls -l
      - sh script/cicd/setup_initial.sh
  
  pre_build:      
    commands:
      - echo Current directory $(pwd)
      - ls -al
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo $PROJECT_PREFIX
      - echo ==--------ListStacks---------==
      - cdk list
      - echo ==--------StartDeploy---------==
      - cdk deploy "$PROJECT_PREFIX"-ModelServingStack --require-approval never
      - cdk deploy "$PROJECT_PREFIX"-APIHostingStack --require-approval never
      - cdk deploy "$PROJECT_PREFIX"-MonitorDashboardStack --require-approval never
      - echo ==--------CompleteDeploy---------==
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker pull public.ecr.aws/vend/moby/buildkit:buildx-stable-1
      - docker build --network host -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
  
  post_build:
    commands:
      - bash -c 'if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 0 ]; then exit 1; fi'
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION > imagedefinitions.json

artifacts:
  files: '**/*'
  name: imagedefinitions